What is Variable ?

    =>  In JavaScript, a variable is a symbolic name or identifier that is used to store and represent data in a program. Variables are a fundamental concept in programming languages, allowing developers to manipulate and work with data dynamically.

    =>  To declare a variable in JavaScript, you can use the var, let, or const keyword, followed by the variable name. Here's a brief overview of each:

    =>  var: var was the primary keyword for declaring variables. It has function-scoping rather than block-scoping, and it is globally scoped if declared outside of any function.

    =>  let: let allows you to declare variables with block-scoping. This means the variable is only accessible within the block (enclosed by curly braces) where it is declared.

    =>  const: const is used to declare constants. Once a value is assigned to a const variable, it cannot be reassigned.

    =>  Variables can store various types of data, including numbers, strings, objects, arrays, and functions. The data type of a variable is dynamically determined based on the type of value assigned to it.


=========================================================================================================================================

What is DataType in ?

    =>  JavaScript is a dynamically-typed language, which means that variables do not have fixed types, and their types can change during the execution of a program. JavaScript has several built-in data types, which can be broadly categorized into two main groups: primitive types and object types.

Primitive Data Types:

    =>  Number: Represents numeric values. It can be integers or floating-point numbers.

    =>  String: Represents sequences of characters enclosed in single or double quotes.

    =>  Boolean: Represents a logical value, either true or false.

    =>  Undefined: Represents a variable that has been declared but not assigned a value.

    =>  Null: Represents the intentional absence of any object value.

    =>  Symbol: Symbols are unique and immutable data types often used as identifiers for object properties.


=========================================================================================================================================


What is typeOf ?

    =>  The typeof operator in JavaScript is used to determine the data type of a variable or an expression. It returns a string that represents the type of the operand.


=========================================================================================================================================

What is operator ?

1. Arithmetic Operators:
    =>  + (Addition): Adds two values.
    =>  - (Subtraction): Subtracts the right operand from the left operand.
    =>  * (Multiplication): Multiplies two values.
    =>  / (Division): Divides the left operand by the right operand.
    =>  % (Modulo): Returns the remainder after division.


2. Comparison Operators:
    =>  == (Equality): Compares two values for equality, with type coercion.
    =>  === (Strict Equality): Compares two values for equality without type coercion.
    =>  != (Inequality): Compares two values for inequality, with type coercion.
    =>  !== (Strict Inequality): Compares two values for inequality without type coercion.
    =>  > (Greater Than): Checks if the left operand is greater than the right operand.
    =>  < (Less Than): Checks if the left operand is less than the right operand.
    =>  >= (Greater Than or Equal To): Checks if the left operand is greater than or equal to the right operand.
    =>  <= (Less Than or Equal To): Checks if the left operand is less than or equal to the right operand.


3. Logical Operators:
    =>  && (Logical AND): Returns true if both operands are true.
    =>  || (Logical OR): Returns true if at least one operand is true.
    =>  ! (Logical NOT): Returns the opposite boolean value of the operand.


4. Assignment Operators:
    =>  = (Assignment): Assigns a value to a variable.
    =>  += (Addition Assignment): Adds the right operand to the left operand and assigns the result to the left operand.
    =>  -= (Subtraction Assignment): Subtracts the right operand from the left operand and assigns the result to the left operand.
    =>  *= (Multiplication Assignment): Multiplies the left operand by the right operand and assigns the result to the left operand.
    =>  /= (Division Assignment): Divides the left operand by the right operand and assigns the result to the left operand.
    =>  %= (Modulo Assignment): Computes the modulo of the left operand divided by the right operand and assigns the result to the left operand.


5. Unary Operators:
    =>  + (Unary Plus): Converts its operand to a number, or returns the original value if it is already a number.
    =>  - (Unary Minus): Negates its operand.
    =>  ++ (Increment): Increases the value of its operand by 1.
    =>  -- (Decrement): Decreases the value of its operand by 1.


=========================================================================================================================================


What is identifiers ?

1. Character Set:
    =>  Identifiers can include uppercase and lowercase letters (A-Z, a-z).
    =>  They can also include digits (0-9), but they cannot start with a digit.


2. Special Characters:
    =>  The only special character allowed in an identifier is the underscore (_).


3. Reserved Words:
    =>  JavaScript has reserved words that cannot be used as identifiers because they have predefined meanings in the language. Examples include if, else, while, function, etc.


4. Unicode Characters:
    =>  JavaScript allows the use of Unicode characters beyond the ASCII character set in identifiers.


5. Case Sensitivity:
    =>  JavaScript is case-sensitive. myVar and myvar are considered different identifiers.


6. Length:
    =>  There is no specific limit on the length of an identifier, but it's a good practice to keep them reasonably short and meaningful.


7. Naming Conventions:
    =>  Use descriptive names that convey the purpose or meaning of the variable or function.
    =>  Use camelCase for multi-word identifiers (e.g., myVariable, calculateTotal).
    =>  Constants are often written in all uppercase with underscores (e.g., MAX_SIZE, PI).


=========================================================================================================================================


What is Word case ?

1. Camel Case:
    =>  Capitalizes the first letter of each word except for the initial word. The first word starts with a lowercase letter.
        = Ex. - myVariableName, calculateTotalAmount, getUserInfo

2. Pascal Case (or Upper Camel Case):
    =>  Similar to Camel Case, but the first letter of each word is capitalized, including the initial word.
        = Ex. - MyClass, CalculateTotalAmount, GetUserInfo

3. Snake Case:
    =>  Words are written in lowercase and separated by underscores.
        = Ex. - my_variable_name, calculate_total_amount, get_user_info


=========================================================================================================================================


What is String ?

    =>  String is a data type used to represent a sequence of characters. Characters can include letters, numbers, symbols, and whitespace. Strings are one of the fundamental data types in most programming languages, including JavaScript.
    =>  In JavaScript, you can create a string by enclosing a sequence of characters in single (') or double (") quotes. 


=========================================================================================================================================


What is String Indeces ?

    =>  strings are zero-indexed, meaning that the characters in a string are assigned numerical indices starting from 0. You can access individual characters in a string using these indices.

=========================================================================================================================================


What is Null & Undefined ?

1. null:
    =>  null is a special object value that represents the intentional absence of any object value.
    =>  It is often used to explicitly indicate that a variable or object property has no assigned value or that an object should have no value.
    =>  It is a type and a value.
    =>  Use null to explicitly indicate the absence of a meaningful object value.

2. undefined:
    =>  undefined is a primitive value that is automatically assigned to a variable that has been declared but has not been assigned any value.
    =>  It is also the default return value for a function that does not explicitly return anything.
    =>  It is a type and a value.
    =>  Use undefined when a variable has been declared but has no assigned value.


=========================================================================================================================================


What is Console ?

    =>  The console object is a built-in object that provides methods for interacting with the browser's debugging console. It is commonly used for debugging and logging information during development. 
    =>  The console object is not part of the JavaScript language specification itself but is implemented by web browsers for debugging purposes.


=========================================================================================================================================


What is Template Literals ?

Template Literal:

    =>  Enclosed by backticks (`), allowing for the easy embedding of expressions and multiline strings.
    =>  Supports string interpolation, where expressions are inserted dynamically using ${}.
    =>  Provides a cleaner and more readable way to work with strings compared to traditional string concatenation.


=========================================================================================================================================


What is Condition Statement ?

1. if Statement:
    =>  The if statement is used to execute a block of code if a specified condition is true. It can be followed by an optional else block to specify code that should be executed when the condition is false.

2. Nested if-else:
    =>  A programming construct where an if-else statement is placed inside another if or else block, allowing for multiple levels of conditional checks. The inner if-else statement is executed based on the result of the outer condition.

3. switch Statement:
    =>  The switch statement is used to perform different actions based on different conditions. It provides a cleaner way to handle multiple conditions compared to long chains of if and else if.


=========================================================================================================================================


What is trutsy & falsy ?

Truthy:
    =>  Values that are considered truthy when coerced to a boolean. These values are treated as true in boolean expressions.
    =>  Examples of truthy values include non-empty strings, numbers other than 0, objects, arrays, functions, and the boolean value true.

Falsy:
    =>  Values that are considered falsy when coerced to a boolean. These values are treated as false in boolean expressions.
    =>  Examples of falsy values include an empty string (''), 0, NaN (Not a Number), null, undefined, and the boolean value false.


=========================================================================================================================================


What is Atert, Prompt and Warning ?

Alert:
    =>  A method in JavaScript that displays a pop-up dialog box with a specified message. It is often used for simple informational messages to the user.

Prompt:
    =>  A method in JavaScript that displays a pop-up dialog box with a message and an input field for the user to enter data. The entered data can then be captured and used in the program.

Warning:
    =>  In a general sense, a warning is a message or indication that alerts the user about a potential issue or provides information that requires attention. In JavaScript, warnings can be conveyed using alert messages or other means to notify users about important aspects of the application.


=========================================================================================================================================


